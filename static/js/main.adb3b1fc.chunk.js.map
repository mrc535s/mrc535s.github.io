{"version":3,"sources":["modules/PostFeed/services/PostService.js","modules/PostFeed/state/reducer.js","styles/colors.js","components/Button.jsx","components/ErrorText.jsx","modules/PostFeed/components/Post.jsx","components/NavLink.jsx","modules/PostFeed/components/PostList.jsx","components/Input.jsx","components/TextArea.jsx","modules/PostFeed/components/CreatePost.jsx","modules/PostFeed/PostFeed.jsx","App.js","reportWebVitals.js","index.js"],"names":["POSTS_URI","headers","Headers","Accept","fetch","method","post","userId","body","JSON","stringify","title","content","id","ADD_POSTS","ADD_POST","DELETE_POST","reducer","state","action","type","data","find","nextId","sort","a","b","filter","Button","styled","button","colors","props","danger","css","secondary","disabled","ErrorText","span","PostCard","section","Post","setPosts","useContext","PostContext","useState","submitted","setSubmitted","error","setError","onClick","PostService","then","response","ok","Error","statusText","catch","console","deletePost","NavLink","Link","PostListHeader","div","PostListBody","PostList","posts","to","length","map","Input","input","TextArea","textarea","CreatePost","initPostState","setPost","handleInputChange","event","target","name","value","onSubmit","preventDefault","json","serverPost","history","push","err","placeholder","required","size","onChange","createContext","PostFeed","useReducer","isLoading","setIsLoading","useEffect","mounted","res","log","finally","Provider","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.adb3b1fc.chunk.js","sourcesContent":["export const POSTS_URI = 'http://jsonplaceholder.typicode.com/posts';\nconst headers = new Headers({\n    Accept: \"application/vnd.github.cloak-preview\",\n    'Content-type': 'application/json; charset=UTF-8'\n  })\nconst fetchAll = () => {\n    return fetch(\n            POSTS_URI,\n          {\n            method: \"GET\",\n            headers\n          }\n        )\n}\nconst addPost = (post, userId) => {\n    return fetch(POSTS_URI, {\n        method: 'POST',\n        body: JSON.stringify({\n          title: post.title,\n          body: post.content,\n          userId: userId,\n        }),\n        headers\n      })\n}\n\nconst deletePost = (id) => {\n    return fetch(`${POSTS_URI}/${id}`, {\n      method: 'DELETE',\n    })\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    fetchAll,\n    addPost,\n    deletePost\n};","export const ADD_POSTS = 'ADD_POSTS'\nexport const ADD_POST = 'ADD_POST'\nexport const DELETE_POST = 'DELETE_POST'\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case ADD_POSTS: \n          return action.data\n        case ADD_POST:\n          // interesting case here if id already exists and fake server always returns same id\n          // in reality, probably should never happen, but if it does will find next available id\n          if(state.find((post) => post.id === action.data.id)) {\n            let lastPost = state.sort((a, b) => a - b)[0]\n            let nextId = lastPost.id + 1\n            action.data.id = nextId\n          }\n          return [action.data, ...state];\n        case DELETE_POST: \n          return state.filter(post => {\n              return post.id !== action.id\n            });\n        default: \n          return state;\n    }\n  }\n\n  export default reducer","// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n    grey1: '#cccccc',\n    grey2: '#999999',\n    grey3: '#666666',\n    white: '#fff',\n    primary: '#005bbb',\n    danger: '#990000',\n    secondary: '#ffc72c'\n   };","import styled, { css } from 'styled-components'\nimport colors from '../styles/colors'\n\nconst Button = styled.button`\n  background: ${colors.primary};\n  color: ${colors.white};\n  border-radius: 20px;\n  border: 2px solid ${colors.primary};\n  padding: 0.5em 1em;\n  font-size: 14px;\n  margin-right: 5px;\n  margin-top: 5px;\n  cursor: pointer;\n\n    ${props =>\n      props.danger &&\n      css`\n        background: ${colors.danger};\n        border: 2px solid ${colors.danger};\n      `};\n\n      ${props =>\n        props.secondary &&\n        css`\n          background: ${colors.secondary};\n          border: 2px solid ${colors.secondary};\n        `};\n\n        ${props =>\n          props.disabled &&\n          css`\n            background-color: #cccccc;\n            color: ${colors.grey3};\n            background: ${colors.grey1};\n            border: 1px solid ${colors.grey1};\n            cursor: not-allowed;\n          `};\n`\nexport default Button\n","import styled from 'styled-components'\n\nimport colors from '../styles/colors';\n\n\nconst ErrorText = styled.span`\n    color: ${colors.danger};\n    margin-left: 5px;\n    }\n`;\n\nexport default ErrorText;","import React, {useContext, useState} from \"react\";\nimport styled from 'styled-components';\n\nimport { PostContext } from '../PostFeed'\nimport PostService from '../services/PostService'\nimport { DELETE_POST } from '../state/reducer'\nimport Button from '../../../components/Button'\nimport ErrorText from '../../../components/ErrorText'\n\nimport colors from '../../../styles/colors'\n\nconst PostCard = styled.section`\n    border: ${colors.grey1} 1px solid;\n    padding: 0px 20px 10px;\n    margin: 10px 0;\n    border-radius: 5px;\n }\n`;\nconst Post = ({ title, body, id }) => {\n  const { setPosts } = useContext(PostContext)\n  const [submitted, setSubmitted] = useState(false)\n  const [error, setError] = useState(null)\n\n  const deletePost = id => {\n    setSubmitted(true)\n    setError(null)\n    PostService.deletePost(id)\n      .then((response) => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        setSubmitted(false)\n        setPosts({type: DELETE_POST, id: id});\n      })\n      .catch((error) => {\n        console.error(error)\n        setSubmitted(false)\n        setError(\"There was an error deleting the post, please try again\")\n      })\n  };\n  return (\n    <>\n      <PostCard>\n        <h2>{title}</h2>\n        <p> {body}</p>\n        <Button danger disabled={submitted} onClick={() => deletePost(id)} >Delete</Button>\n        {error && <ErrorText>{error}</ErrorText>}\n      </PostCard>\n    </>\n  );\n};\nexport default Post;","import styled, { css } from 'styled-components'\nimport { Link } from 'react-router-dom';\nimport colors from '../styles/colors'\n\nconst NavLink = styled(Link)`\n  background: ${colors.primary};\n  color: ${colors.white};\n  border-radius: 20px;\n  border: 2px solid ${colors.primary};\n  padding: .5em 1em;\n  text-decoration: none;\n  font-size: 14px;\n  margin-right: 5px;\n  margint-top: 5px;\n  cursor: pointer;\n\n    ${props =>\n      props.danger &&\n      css`\n        background: ${colors.danger};\n        border: 2px solid ${colors.danger};\n      `};\n\n      ${props =>\n        props.secondary &&\n        css`\n          background: ${colors.secondary};\n          border: 2px solid ${colors.secondary};\n        `};\n\n        ${props =>\n          props.disabled &&\n          css`\n            background-color: ${colors.grey1};\n            color: ${colors.grey3};\n            background: ${colors.grey1};\n            border: 1px solid ${colors.grey1};\n            cursor: not-allowed;\n          `};\n`\nexport default NavLink","import React from \"react\";\nimport styled from 'styled-components';\n\nimport Post from \"./Post\";\nimport NavLink from '../../../components/NavLink'\n\nimport colors from '../../../styles/colors'\n\nconst PostListHeader = styled.div`\n    top: 0;\n    width: 100%;\n    background-color: #fff;\n    padding-bottom: 30px;\n    border-bottom: 1px solid ${colors.grey1};\n    position: fixed;\n`\n\nconst PostListBody = styled.div`\n    margin-top: 120px;\n`\nconst PostList = (props) => {\n  const { posts } = props\n  return (\n    <>\n      <PostListHeader>\n        <h1>Post Feed</h1>\n        <section>\n            <NavLink to=\"/posts/add\">Create New Post</NavLink>\n        </section>\n      </PostListHeader>\n      <PostListBody>\n        {!posts.length ? (\n          <section>\n            <h1>No Posts Found!</h1>\n            <br />\n            <br />\n          </section>\n        ) : (\n        <div>\n          <section>\n          {posts.map(post => {\n            return (\n              <Post\n                id={post.id}\n                key={post.id}\n                title={post.title}\n                body={post.body}\n              />\n            );\n          })}\n          </section>\n          \n          </div>\n\n        )}\n      </PostListBody>\n    </>\n  );\n};\nexport default PostList;","import styled from 'styled-components'\nimport colors from '../styles/colors'\nconst Input = styled.input`\nwidth: 400px;\nheight: 40px;\nmargin: 10px 0;\npadding: 5px;\nborder: 1px solid ${colors.grey1};\nborder-radius: 5px;\noutline: none;\ndisplay:block;\n`\n\nexport default Input;","import styled from 'styled-components';\n\nimport colors from '../styles/colors';\n\nconst TextArea = styled.textarea`\nresize: none;\nheight: 100px;\nwidth: 400px;\nfont: 400 12px sans-serif;\npadding: 5px;\nborder: 1px solid ${colors.grey1};\nborder-radius: 5px;\noutline: none;`\n\nexport default TextArea;","import React, {useState, useContext} from \"react\";\n\nimport { PostContext } from '../PostFeed'\nimport PostService from '../services/PostService'\nimport { ADD_POST } from '../state/reducer'\n\nimport Button from '../../../components/Button'\nimport NavLink from '../../../components/NavLink'\nimport Input from '../../../components/Input'\nimport TextArea from '../../../components/TextArea'\nimport ErrorText from '../../../components/ErrorText'\n\nconst CreatePost = props => {\n  const { setPosts } = useContext(PostContext)\n\n  const initPostState = {\n    id: null,\n    title: \"\",\n    body: \"\"\n  };\n  const [post, setPost] = useState(initPostState);\n  const [submitted, setSubmitted] = useState(false);\n  const [error, setError] = useState(null)\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setPost({ ...post, [name]: value });\n  };\n\n  const savePost = event => {\n    const userId = 1\n    event.preventDefault();\n    setError(null)\n    setSubmitted(true)\n\n    PostService.addPost(post, userId)\n      .then((response) => {\n        if(!response.ok) {\n          throw new Error(response.statusText)\n        }\n        return response.json()\n      })\n      .then((serverPost) => {\n        post.id = serverPost.id\n        setPosts({type: ADD_POST, data: post})\n        setPost(initPostState)\n        setSubmitted(false)\n        props.history.push(\"/posts\");\n      })\n      .catch((err) => {\n        //console.error(err)\n        setSubmitted(false)\n        setError('There was an error creating the Post.  Please try again.')\n      })\n  };\n\n  return (\n    <>\n    <section>\n      <h1>Create New Post</h1>\n      <form onSubmit={savePost}>\n        <Input\n          type=\"text\"\n          placeholder=\"Title\"\n          disabled={submitted}\n          required\n          name=\"title\"\n          size=\"50\"\n          value={post.title}\n          onChange={handleInputChange}\n        ></Input>\n        <TextArea\n          placeholder=\"Body\"\n          required\n          name=\"body\"\n          disabled={submitted}\n          value={post.body}\n          onChange={handleInputChange}\n        ></TextArea>\n        <section>\n          <NavLink to=\"/posts\" disabled={submitted} secondary=\"true\">Cancel</NavLink>\n          <Button disabled={submitted}>Save Post</Button>\n          {error && <ErrorText>{error}</ErrorText>}\n        </section>\n      </form>\n      </section>\n    </>\n  );\n};\nexport default CreatePost;","import React, { useReducer, createContext, useEffect, useState} from 'react';\nimport PostList from './components/PostList'\nimport CreatePost from './components/CreatePost'\nimport { Switch, Route } from \"react-router-dom\";\nimport reducer, { ADD_POSTS } from './state/reducer'\nimport PostService from './services/PostService'\nimport { BrowserRouter } from \"react-router-dom\";\n\nexport const PostContext = createContext();\n\nconst PostFeed = () => {\n    const [posts, setPosts] = useReducer(reducer, [])\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(true)\n    useEffect(() => {\n      setIsLoading(true)\n      setError(null)\n      let mounted = true;\n      PostService\n        .fetchAll()\n        .then(res => {\n          if(!res.ok) {\n            throw new Error(res.statusText)\n          }\n          return res.json()\n        })\n        .then(response => {\n          if(mounted) {\n            setPosts({ type: ADD_POSTS, data: response } );\n          }\n        })\n        .catch(error => {\n          console.log(error)\n          if(mounted)\n            setError(\"There was an error loading posts.  Please try again\")\n        })\n        .finally(() => {\n          if(mounted)\n            setIsLoading(false)\n        });\n        return () => { mounted = false; }\n      }, []);\n  return (\n    <PostContext.Provider value={{ setPosts }}>\n    <div>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={[\"/posts\", \"/\"]}>\n            {isLoading ? <div>Loading Posts...</div> : error ? <div>{error}</div> : <PostList posts={ posts }/>}\n            </Route>\n          <Route exact path=\"/posts/add\" component={ CreatePost } />\n        </Switch>\n        </BrowserRouter>\n    </div>\n    </PostContext.Provider>\n  );\n};\nexport default PostFeed;","import React from \"react\";\nimport PostFeed from \"./modules/PostFeed/PostFeed\"\nconst App = ( ) => {\n  return (\n    <div>\n        <PostFeed />\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}